@using Microsoft.CodeAnalysis
@using MusicStoreInfo.Domain.Entities
@using MusicStoreInfo.DAL
@using Microsoft.EntityFrameworkCore;
@* @model IEnumerable<MusicStoreInfo.Domain.Entities.Product> *@
@model MusicStoreInfo.Api.Models.ProductViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Pager pager = new Pager();

    int pageNo = 0;

    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}

<h1>Продукты</h1>

<p>
    @if (User.IsInRole("Manager") || User.IsInRole("Admin"))
    {
        <a asp-action="Create" class="btn btn-primary">Создать</a>
    }
</p>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products</title>
    <style>
        .filter-sidebar {
            position: fixed;
            left: -300px;
            top: 0;
            width: 300px;
            height: 100%;
            background-color: #f8f9fa;
            box-shadow: 2px 0 5px rgba(0,0,0,0.1);
            padding: 20px;
            overflow-y: auto;
            transition: left 0.3s ease;
            z-index: 1000;
        }

            .filter-sidebar.open {
                left: 0;
            }

            .filter-sidebar h4 {
                margin-top: 20px;
            }

            .filter-sidebar input[type="checkbox"] {
                margin-right: 10px;
            }

            .filter-sidebar .filter-group {
                margin-bottom: 20px;
            }

        .filter-button, .search-button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s ease;
            margin-left: 10px;
            flex: 0 0 auto; /* Prevent flex-grow */
            white-space: nowrap; /* Prevent text wrapping */
        }

            .filter-button:hover, .search-button:hover {
                background-color: #0056b3;
            }

        .filter-group input[type="number"] {
            width: calc(50% - 10px);
            padding: 5px;
            margin: 5px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            display: inline-block;
        }

        .filter-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        .filter-group input[type="number"]::placeholder {
            color: #6c757d;
        }

        .checkbox-container {
            max-height: 150px;
            overflow-y: auto;
            border: 1px solid #ced4da;
            border-radius: 4px;
            padding: 10px;
        }

        .close-button {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s ease;
        }

            .close-button:hover {
                background-color: #c82333;
            }

        .form-inline {
            display: flex;
            align-items: center;
        }

        .form-control {
            flex: 1;
        }
    </style>
</head>

<body>
    <form method="get" action="@Url.Action("Index")" class="form-inline mb-3 d-flex">
        <input type="text" name="searchString" class="form-control mr-2" placeholder="Поиск по названиям" value="@ViewBag.CurrentFilter">
        <button type="submit" class="btn btn-outline-success search-button">Поиск</button>
        <button type="button" class="btn btn-outline-primary filter-button" onclick="toggleFilterSidebar()">Фильтры</button>
    </form>

    <div class="filter-sidebar" id="filter-sidebar">
        <button class="close-button" onclick="toggleFilterSidebar()">×</button>
        <h3>Фильтры</h3>
        <form id="filter-form" method="get" action="/Product">
            <div class="filter-group">
                <h4>Цена</h4>
                <label for="minPrice">от</label>
                <input type="number" name="minPrice" id="minPrice" min="0" placeholder="@(Model.Products.Any() ? @Model.Products.Min(p => p.Price).ToString() : 0)">
                <label for="maxPrice">до</label>
                <input type="number" name="maxPrice" id="maxPrice" min="0" placeholder="@(Model.Products.Any() ? @Model.Products.Max(p => p.Price).ToString() : 0)">
            </div>
            <div class="filter-group">
                <h4>Количество</h4>
                <label for="minQuantity">от</label>
                <input type="number" name="minQuantity" id="minQuantity" min="0" placeholder="@(Model.Products.Any() ? @Model.Products.Min(p => p.Quantity).ToString() : 0)">
                <label for="maxQuantity">до</label>
                <input type="number" name="maxQuantity" id="maxQuantity" min="0" placeholder="@(Model.Products.Any() ? @Model.Products.Max(p => p.Quantity).ToString() : 0)">
            </div>
            <div class="filter-group">
                <h4>Магазин</h4>
                <div class="checkbox-container">
                    @foreach (var store in Model.Stores)
                    {
                        <div>
                            <input type="checkbox" name="storeIds" value="@store.Id"> @store.Name
                        </div>
                    }
                </div>
            </div>
            <div class="filter-group">
                <h4>Группа</h4>
                <div class="checkbox-container">
                    @foreach (var group in Model.Groups)
                    {
                        <div>
                            <input type="checkbox" name="groupIds" value="@group.Id"> @group.Name
                        </div>
                    }
                </div>
            </div>
            <div class="filter-group">
                <h4>Жанр</h4>
                <div class="checkbox-container">
                    @foreach (var genre in Model.Genres)
                    {
                        <div>
                            <input type="checkbox" name="genreIds" value="@genre.Id"> @genre.Name
                        </div>
                    }
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Применить фильтры</button>
        </form>
    </div>

    <script>
        function toggleFilterSidebar() {
            var sidebar = document.getElementById('filter-sidebar');
            sidebar.classList.toggle('open');
        }
    </script>
</body>

<body>
    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Сортировка
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <a class="dropdown-item" href="@Url.Action("Index", new { sortOrder = "price_asc" })">Сначала недорогие</a>
            <a class="dropdown-item" href="@Url.Action("Index", new { sortOrder = "price_desc" })">Сначала дорогие</a>
            <a class="dropdown-item" href="@Url.Action("Index", new { sortOrder = "quantity" })">По количеству альбомов</a>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>



<body>
<table class="table table-bordered">
    <thead>
        <tr>
            @if (User.IsInRole("Manager") || User.IsInRole("Admin"))
            {
                <th>
                    Id
            </th>
            }
            <th>
                Обложка
            </th>
            <th>
                Альбом
            </th>
            <th>
                Магазин
            </th>
            <th>
                Район
            </th>
            <th>
                Город
            </th>           
            <th>
                Группа
            </th>
            <th>
                Количество
            </th>
            <th>
                Цена
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Products) {
        <tr>
                @if (User.IsInRole("Manager") || User.IsInRole("Admin")){
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
                }
            <td>
                    <img src="@("~/image/" + item.Album.ImagePath)" asp-append-version="true" width="50px" height="50px" class="rounded-circle" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Album.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Store.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Store.District.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Store.District.City.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Album.Group.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                        @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @if ((User.IsInRole("Manager") || User.IsInRole("Admin")) && int.Parse(User.Claims.FirstOrDefault(c => c.Type == "StoreId")?.Value) == item.StoreId)
                {
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Изменить</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Подробнее</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Удалить</a>
                }
                else
                {
                    var dbContext = new MusicStoreDbContext();
                    var id = int.Parse(User.Claims.FirstOrDefault(c => c.Type == "ShoppingCartId")?.Value!);
                    var shoppingCart = dbContext.ShoppingCarts.Include(sc => sc.ShoppingCartProducts).ThenInclude(scp => scp.Product).FirstOrDefault(sc => sc.Id == id);
                    @if (shoppingCart.ShoppingCartProducts.FirstOrDefault(scp => scp.Product.AlbumId == item.AlbumId && scp.Product.StoreId == item.StoreId) != null && shoppingCart.ShoppingCartProducts.Count != 0)
                    {
                        var quantity = shoppingCart.ShoppingCartProducts.FirstOrDefault(scp => scp.Product.AlbumId == item.AlbumId && scp.Product.StoreId == item.StoreId).Quantity;
                        <div class="container">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm details-button">Подробнее</a>
                            <a class="add-to-cart btn btn-primary btn-sm" data-store-id="@item.StoreId" data-album-id="@item.AlbumId" style="display: none;">Добавить в корзину</a>
                            @if (quantity > 0)
                            {
                                <div class="quantity-container">
                                    <button class="btn btn-outline-secondary btn-sm minus-button" type="button" data-store-id="@item.StoreId" data-album-id="@item.AlbumId">-</button>
                                    <span class="quantity">@quantity</span>
                                    <button class="btn btn-outline-secondary btn-sm plus-button" type="button" data-store-id="@item.StoreId" data-album-id="@item.AlbumId">+</button>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="container">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm details-button">Подробнее</a>
                            <a class="add-to-cart btn btn-primary btn-sm" data-store-id="@item.StoreId" data-album-id="@item.AlbumId">Добавить в корзину</a>
                            <div class="quantity-container" style="display: none;">
                                <button class="btn btn-outline-secondary btn-sm minus-button" type="button" data-store-id="@item.StoreId" data-album-id="@item.AlbumId">-</button>
                                <span class="quantity">1</span>
                                <button class="btn btn-outline-secondary btn-sm plus-button" type="button" data-store-id="@item.StoreId" data-album-id="@item.AlbumId">+</button>
                            </div>
                        </div>
                    }
                }
            </td>
        </tr>
}
    </tbody>
</table>
</body>

<div class="container">
    @if (pager.TotalPages > 0)
    {
        <ul class="pagination justify-content-end">
            @if (pager.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Product" asp-action="Index"
                       asp-route-page="1"
                       asp-route-minPrice="@ViewBag.MinPrice"
                       asp-route-maxPrice="@ViewBag.MaxPrice"
                       asp-route-minQuantity="@ViewBag.MinQuantity"
                       asp-route-maxQuantity="@ViewBag.MaxQuantity"
                       asp-route-storeIds="@string.Join(",", ViewBag.StoreIds)"
                       asp-route-groupIds="@string.Join(",", ViewBag.GroupIds)"
                       asp-route-genreIds="@string.Join(",", ViewBag.GenreIds)"
                       asp-route-sortOrder="@ViewBag.SortOrder"
                       asp-route-searchString="@ViewBag.CurrentFilter">Первая</a>
                </li>
                <li>
                    <a class="page-link" asp-controller="Product" asp-action="Index"
                       asp-route-page="@(pager.CurrentPage - 1)"
                       asp-route-minPrice="@ViewBag.MinPrice"
                       asp-route-maxPrice="@ViewBag.MaxPrice"
                       asp-route-minQuantity="@ViewBag.MinQuantity"
                       asp-route-maxQuantity="@ViewBag.MaxQuantity"
                       asp-route-storeIds="@string.Join(",", ViewBag.StoreIds)"
                       asp-route-groupIds="@string.Join(",", ViewBag.GroupIds)"
                       asp-route-genreIds="@string.Join(",", ViewBag.GenreIds)"
                       asp-route-sortOrder="@ViewBag.SortOrder"
                       asp-route-searchString="@ViewBag.CurrentFilter">Пред.</a>
                </li>
            }

            @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
            {
                <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-controller="Product" asp-action="Index"
                       asp-route-page="@pge"
                       asp-route-minPrice="@ViewBag.MinPrice"
                       asp-route-maxPrice="@ViewBag.MaxPrice"
                       asp-route-minQuantity="@ViewBag.MinQuantity"
                       asp-route-maxQuantity="@ViewBag.MaxQuantity"
                       asp-route-storeIds="@string.Join(",", ViewBag.StoreIds)"
                       asp-route-groupIds="@string.Join(",", ViewBag.GroupIds)"
                       asp-route-genreIds="@string.Join(",", ViewBag.GenreIds)"
                       asp-route-sortOrder="@ViewBag.SortOrder"
                       asp-route-searchString="@ViewBag.CurrentFilter">@pge</a>
                </li>
            }

            @if (pager.CurrentPage < pager.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Product" asp-action="Index"
                       asp-route-page="@(pager.CurrentPage + 1)"
                       asp-route-minPrice="@ViewBag.MinPrice"
                       asp-route-maxPrice="@ViewBag.MaxPrice"
                       asp-route-minQuantity="@ViewBag.MinQuantity"
                       asp-route-maxQuantity="@ViewBag.MaxQuantity"
                       asp-route-storeIds="@string.Join(",", ViewBag.StoreIds)"
                       asp-route-groupIds="@string.Join(",", ViewBag.GroupIds)"
                       asp-route-genreIds="@string.Join(",", ViewBag.GenreIds)"
                       asp-route-sortOrder="@ViewBag.SortOrder"
                       asp-route-searchString="@ViewBag.CurrentFilter">След.</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="Product" asp-action="Index"
                       asp-route-page="@(pager.TotalPages)"
                       asp-route-minPrice="@ViewBag.MinPrice"
                       asp-route-maxPrice="@ViewBag.MaxPrice"
                       asp-route-minQuantity="@ViewBag.MinQuantity"
                       asp-route-maxQuantity="@ViewBag.MaxQuantity"
                       asp-route-storeIds="@string.Join(",", ViewBag.StoreIds)"
                       asp-route-groupIds="@string.Join(",", ViewBag.GroupIds)"
                       asp-route-genreIds="@string.Join(",", ViewBag.GenreIds)"
                       asp-route-sortOrder="@ViewBag.SortOrder"
                       asp-route-searchString="@ViewBag.CurrentFilter">Послед.</a>
                </li>
            }
        </ul>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('.add-to-cart').click(function (e) {
            e.preventDefault();
            var button = $(this);
            var storeId = button.data('store-id');
            var albumId = button.data('album-id');
            var quantity = button.closest('.container').find('.quantity').text();

            console.log('Store ID:', storeId);
            console.log('Album ID:', albumId);
            console.log('Quantity:', quantity);

            $.ajax({
                url: '/Product/AddInShoppingCart',
                type: 'POST',
                data: {
                    storeId: storeId,
                    albumId: albumId,
                    quantity: quantity
                },
                success: function (response) {
                    if (response.success) {
                        console.log('Product added to cart successfully');
                        button.hide(); // Скрываем кнопку
                        button.closest('.container').find('.quantity-container').show(); // Показываем счетчик
                    } else {
                        console.error('Ошибка добавления в корзину:', response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Ошибка добавления в корзину:', error);
                    console.error('Response:', xhr.responseText);
                }
            });
        });

        $('.minus-button').click(function () {
            var button = $(this);
            var quantitySpan = button.siblings('.quantity');
            var value = parseInt(quantitySpan.text());
            var storeId = button.data('store-id');
            var albumId = button.data('album-id');

            if (value > 1) {
                quantitySpan.text(value - 1);
                updateCart(storeId, albumId, value - 1);
            } else {
                button.closest('.container').find('.add-to-cart').show();
                button.parent('.quantity-container').hide();
                updateCart(storeId, albumId, 0);
            }
        });

        $('.plus-button').click(function () {
            var button = $(this);
            var quantitySpan = button.siblings('.quantity');
            var value = parseInt(quantitySpan.text());
            var storeId = button.data('store-id');
            var albumId = button.data('album-id');

            quantitySpan.text(value + 1);
            updateCart(storeId, albumId, value + 1);
        });

        function updateCart(storeId, albumId, quantity) {
            console.log('Updating cart:', storeId, albumId, quantity);

            $.ajax({
                url: '/Product/AddInShoppingCart',
                type: 'POST',
                data: {
                    storeId: storeId,
                    albumId: albumId,
                    quantity: quantity
                },
                success: function (response) {
                    if (response.success) {
                        console.log('Cart updated successfully');
                    } else {
                        console.error('Ошибка обновления корзины:', response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Ошибка обновления корзины:', error);
                    console.error('Response:', xhr.responseText);
                }
            });
        }
    });
</script>

<head>
    <meta charset="utf-8" />
    <title>Пример страницы</title>
    <style>
        .container {
            display: flex;
            align-items: center;
        }

        .quantity-container {
            display: flex;
            align-items: center;
        }

            .quantity-container button,
            .quantity-container span {
                margin: 0 5px;
            }

        .details-button {
            margin-right: 10px; /* Или любое другое значение отступа */
        }
    </style>
</head>